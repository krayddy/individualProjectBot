import telebot
from telebot import types


bot = telebot.TeleBot("1284427462:AAHPyWAvdRGT104ol7fCp4PXELJmAi55EwU")

#region variables
unity = [
"**Установка**\nДля начала работы с Unity требуется перейти на официальный сайт [Unity](https://unity.com) и нажать кнопку Get started",
"После перехода на новую страницу выбрать вкладку Individual и далее, нажать на кнопку Get Started ",
"После перехода на новую страницу выбрать Start Here на вкладке First-Time Users. После нажатия данной кнопки начнется скачивание установщика Unity Hub – специального установщика для продуктов Unity. В нем будет необходимо выбрать папку, в которую вы хотите в дальнейшем установить Unity Hub и сам Unity. После завершения откройте Unity Hub. Для дальнейшей установки Unity понадобится Unity ID. Регистрацию можно совершить либо на официальном сайте, либо в приложении, следуя подсказкам. При выборе лицензии Unity выбирайте индивидуальную бесплатную.",
"**Установка Unity Editor и создание проекта**\nВ открытом Unity Hub выберите вкладку Installs и далее нажмите на кнопку Add.",
"Вам будет предложено несколько версий Unity. Советуем установить версию, которую рекомендует сам Unity Hub. Нажмите на кнопку Next.  ",
"Далее вам будут представлены несколько модулей на установку. Так как наше AR-приложение будет на IOS/Android - выбирайте данные модули (как показано на скриншоте). ",
"После завершения установки Unity Editor Кликните на вкладку Projects, затем на кнопку New. Откроется Окно создания проекта. Выберите опцию 3D и нажмите кнопку Create",
"**Добавление Vuforia в Unity**\nПерейдите на [официальный сайт Vuforia](https://developer.vuforia.com). Зарегистрируйтесь, и после регистрации нажмите на вкладку Downloads",
"Далее нажмите на ссылку Add Vuforia to a Unity Project. Начнется скачивание файла Vuforia.unitypackage. После того, как загрузка завершится, откроется окно импорта Package (пакетов расширений для Unity). Нажмите кнопку Import.",
"После завершения всех операций, вы сможете пользоваться объектами Vuforia Engine. Но для их использования потребуется включение настроек в Unity Editor. Откройте Unity Editor, выберите вкладки Edit — Project Settings — Player — XR Settings и поставьте галочку Vuforia Augmented Reality Supported.",
"Далее необходимо получить лицензионный ключ и создать базу изображений для корректной работы Vuforia. Для этого переходим на [официальный сайт Vuforia](https://developer.vuforia.com) и кликаем на вкладку Develop.",
"Для того чтобы получить лицензионный ключ, зайдите в свой созданный аккаунт, и нажмите на кнопку Get Development Key. Дайте название этому ключу.",
"После этого, данный ключ появится в вашем списке лицензий",
"Нажмите на созданный ключ. Откроется страница с вашей лицензией. Вы увидите окно с различными символами, кликните на него.",
"Далее необходимо вернуться обратно в Unity Editor. Для начала работы с Vuforia удалите объект Main Camera. Это можно сделать с помощью клавиши Delete или нажав ПКМ и выбрав опцию Delete в контекстном меню",
"Далее переходим во вкладку GameObject — Vuforia Engine — AR Camera и выбираем эту опцию.",
"При появлении окна нажимаем кнопку Import. Теперь в нашем проекте есть AR Camera, которая является основой работы нашего приложения дополненной реальности. Камера используется непосредственно для отрисовки различных объектов.",
"Далее необходимо добавить ключ с сайта Vuforia в наше приложение. Для этого нажимаем на AR Camera, и в окне справа нажимаем на Open Device Configuration.",
"После этого справа появятся опции камеры, где будет место для добавления ключа с сайта Vuforia, который мы получили ранее. Вставляем ключ с сайта в место на скриншоте.",
"Далее необходимо создать базу распознаваемых изображений. Для этого переходим на [официальный сайт Vuforia](https://developer.vuforia.com). Переходим во вкладку Develop — Target Manager и нажимаем Add Database.",
"В появившемся окне выбираем Device и вводим имя базы данных. После этого она появится в списке баз данных, нажмите на нее.",
"Для того, чтобы добавить распознаваемое изображение, нажмите Add Target.",
"В появившемся окне выбираем Single Image, выбираем файл на вашем компьютере нужного формата (.jpg или .png), ставим в поле Width значение 5 и вписываем любое имя.",
"В дальнейшем, при необходимости, можно также добавлять распознаваемые изображения. После добавления изображений, нажмите Download Database(All) и выберите Unity Editor. Точно так же открываем скачанный файл формата Unity Package и нажимаем в появившемся окне Import.",
"Перейдите обратно в Unity Editor. Теперь можно начать добавлять распознаваемые объекты в наш проект. Для этого нажмите ПКМ на левой панели объектов и выберите Vuforia Engine — Image. ",
"После этого добавится изображение, которое будет распознаваться приложением. Для выбора разных распознаваемых изображений необходимо в Image Target Behaviour на вкладке Image Target выбрать другое изображение (если они имеются в базе). ",
"Чтобы добавить к этому изображению 3D модель, добавьте свой объект в формате .obj в Unity Editor, в нижнюю панель, а потом перенесите данную модель к ImageTarget как дочерний (как на скриншоте). Этот шаг можно повторять для каждого распознаваемого изображения/объекта.",
"**Сборка проекта**\nДля того чтобы превратить проект из Unity Editor в приложении на Android или IOS нужно совершить «сборку» проекта. Для этого перейдите во вкладку File — Build Settings",
"В появившемся окне выберите Android/IOS. Если кнопка Build and Run серая и не нажимается, то сначала нажмите кнопку Switch Platform, а затем кнопку Build and Run. Далее, выберите место на компьютере где вы хотите сохранить приложение в формате .apk. Далее, данный файл .apk переместите на телефон и установите. После установки на телефон и наведения на распознаваемые изображения вы будете видеть ваши модели. Поздравляем, вы сделали свое приложение с дополненной реальностью!"
]

blender = [
"**Скачивание и установка Blender**\nДля начала работы с Blender требуется установить программу. Перейдите на [официальный сайт](https://www.blender.org/) . Нажмите на кнопку Download Blender",
"Вас направит на страницу с выбором операционной системы. Если у вас операционная система Windows, то ничего менять не нужно. Просто нажмите на кнопку Download Blender ",
"Если у вас другая операционная система, то выбираете ее и также нажимаете кнопку, чтобы начать загрузку установочного файла",
"После скачивания файла откройте его и начните процесс установки (нажимайте на кнопку Next, пока не начнется процесс установки)",
"**Создание файла**\nПосле запуска программы вас встретит начальное окно, в котором необходимо выбрать в столбце создать файл пункт General и кликнуть на него ",
"После этого откроется среда, в которой и будет происходить работа с моделью. За основу модели автоматически создается куб ",
"**Основы Blender**\nНеобходимые базовые принципы работы с Blender:\n\n1. Для выделения объекта используется левая кнопка мыши\n2. Для рассмотрения объекта с разных сторон необходимо зажать колесико мыши и двигать ей в нужную сторону\n3. Для приближения/отдаления используется колесико мыши.\n\nВ верхней части программы есть режимы, в которых вы непосредственно и будете работать с моделью. В данной работе вам понадобится всего два из них, а именно Layout и Modeling. В режиме Layout показывается итоговый результат модели, а также в нем вы можете перемещать ее в пространстве. В режиме Modeling вы будете менять размеры и форму модели, а также делить ее на части.",
"**Создание пирамиды с сечением**\nФигурой по умолчанию в Blender является куб. Вы можете его как удалить и заменить другой базовой фигурой, так и взять за основу будущей модели. В данном примере необходимо будет построить пирамиду, поэтому куб как раз подойдет в качестве основы модели. Для начала перейдите в режим Modeling. Это можно сделать при помощи клавиши TAB или его выборе в контекстном меню. Далее с зажатой клавишей SHIFT выделите четыре верхние вершины куба, кликнув на них ",
"Далее нажмите сочетание клавиш SHIFT+S, которое откроет меню",
"В этом меню находятся различные способы влиять на фигуру. После чего выберите Cursor to Selected. Данная функция переместит фокус курсора в центр верхней грани куба ",
"Далее снова используйте сочетание клавиш SHIFT+S и выберите пункт Selection to Cursor, в следствие чего вершины соединятся в точке где находился ваш курсор. В итоге получается пирамида ",
"**Деление фигуры на части**\nЧтобы фигура в дальнейшем корректно отображалась в Unity, мы разделим ее на 3 части, а именно: сечение нашей пирамиды, верхняя и нижняя части, которые сечение делит в пирамиде. Для этого перейдите в режим Modeling. В левой части экрана есть различные инструменты для работы с фигурой. Вам необходимо использовать инструмент нож, который поможет в делении фигуры на части ",
"Для прямого надреза выберите инструмент нож и кликните на нижнюю вершину пирамиды. После этого нажмите клавишу Z, чтобы перейти в режим, в котором надрез пройдет через всю фигуру. Далее выберите точку на противоположной грани и нажмите правую кнопку мыши ",
"В итоге получается линия, которая проходит через всю пирамиду – это и будет первый надрез ",
"Чтобы отсоединить верхнюю часть фигуры, зажмите клавишу Сtrl, выделите верхнюю вершину пирамиды и точки надреза ",
"Далее в верхнем меню выберите Меш — Разделить — Выделение ",
"В итоге получаются две отдельные фигуры ",
"Далее необходимо переместить верхнюю часть в сторону, чтобы с ней было удобнее работать. Для этого перейдите в режим Layout. В правой части выберите свою фигуру",
"В левой части программы выберите режим Переместить",
"Передвиньте верхнюю часть в сторону",
"После того как вы разделили модель на две части, нужно сделать их цельными. Для это перейдите в режим Modeling и выделите 4 точки с зажатой клавишей SHIFT ",
"Затем в верхнем меню выберите Грань — Заполнить ",
"Проделайте те же самые шаги для второй модели. В итоге вы получите две цельные фигуры. Теперь нужно отрезать от верхней фигуры тонкое сечение, чтобы в дальнейшем в Unity вы могли с ним отдельно работать. Для этого проделайте все то же самое, что и в прошлых пунктах.",
"В конечном итоге должны получиться три фигуры как на образце ",
"После того как вы разделили свою начальную фигуру на три части, сохраните каждый объект отдельно в формате .obj. Чтобы это сделать кликните правой кнопкой мыши по фигуре и нажмите Копировать объекты ",
"Далее откройте еще одно окно Blender. Удалите начальный объект с помощью клавиши Del и после клика правой кнопкой мыши по экрану, вставьте свою фигуру. Так вам необходимо сделать для всех трех фигур.",
"После все фигуры необходимо сохранить в формате .obj. Для этого в левом верхнем углу нажмите Файл – Экспортировать – Wavefront (.obj) ",
"У вас откроется окно, в котором нужно выбрать путь файла и нажать кнопку Экспортировать OBJ",
"В итоге вы получаете три отдельные фигуры в формате .obj, с которыми далее будете работать в Unity "
]
#endregion

@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.from_user.id, "Привет! Это бот-помощник по дисциплине Индивидуальный проект. Команда /help поможет начать")


@bot.message_handler(commands=['help'])
def help_handler(message):
    bot.send_message(message.from_user.id, "Доступные команды:\n/Unity - мануал по Unity и Vuforia\n/Blender - мануал по Blender\n/UnityDownload - загрузить руководство по Unity и Vuforia документом\n/BlenderDownload - загрузить руководство по Blender документом")


@bot.message_handler(commands=["Unity", "Vuforia"])
def unity_start(message):
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text="Далее", callback_data="u1")
    keyboard.add(callback_button)
    bot.send_photo(message.chat.id, photo=open("unityImages/1.png", "rb"), caption=unity[0], reply_markup=keyboard, parse_mode="Markdown")

@bot.message_handler(commands=["Blender"])
def blender_start(message):
    keyboard = types.InlineKeyboardMarkup()
    callback_button = types.InlineKeyboardButton(text="Далее", callback_data="b1")
    keyboard.add(callback_button)
    bot.send_photo(message.chat.id, photo=open("blenderImages/1.png", "rb"), caption=blender[0], reply_markup=keyboard, parse_mode="Markdown")


@bot.message_handler(commands=["BlenderDownload"])
def blender_download(message):
    doc = open("Manual_po_Blenderu.docx", "rb")
    bot.send_document(message.chat.id, doc)


@bot.message_handler(commands=["UnityDownload"])
def unity_download(message):
    doc = open("Manual_po_Yuniti.docx", "rb")
    bot.send_document(message.chat.id, doc)


def keyboard_builder(callback_data, manual):
    keyboard = types.InlineKeyboardMarkup()
    next_button = types.InlineKeyboardButton(text="Далее", callback_data=manual + str(callback_data+1))
    prv_button = types.InlineKeyboardButton(text="Назад", callback_data=manual + str(callback_data-1))
    to_begin = types.InlineKeyboardButton(text="В начало", callback_data=manual + str(0))
    if callback_data != 0:
        keyboard.add(prv_button)
    if callback_data != 28:
        keyboard.add(next_button)
    if callback_data == 28:
        keyboard.add(to_begin)
    return keyboard


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        call_data = int(call.data[1:])
        manual_data = call.data[0]
        if manual_data == "u":
            imagePath = f"unityImages/{call_data+1}.png"
            caption = unity[call_data]
        else:
            imagePath = f"blenderImages/{call_data + 1}.png"
            caption = blender[call_data]
        bot.edit_message_media(media=types.InputMedia(type="photo", media=open(imagePath, "rb")), chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard_builder(call_data, manual_data))
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard_builder(call_data, manual_data), caption=caption, parse_mode="Markdown")


bot.polling(none_stop=True, interval=0)